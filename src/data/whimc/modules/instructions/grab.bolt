from whimc:utils import Instruction

grab = Instruction("grab", "Grab Any Block", ["Picks up the block in front of the barrelbot"], "#00B3FF")

with grab.set_function():
    scoreboard players operation $temp whimc.dummy = @s whimc.barrelbot.stack_height
    execute store result storage whimc:macro stack_height int 1 run scoreboard players add $temp whimc.dummy 1
    scoreboard players set $stack_success whimc.dummy 0

    # Make sure it doesn't attempt to pick up another barrelbot
    execute positioned ^ ^ ^1 align xyz if entity @e[type=item_display,tag=whimc.barrelbot,dx=0,dy=0,dz=0] run return 0

    with storage whimc:macro:
        $execute store success score $stack_success whimc.dummy if block ~ ~$(stack_height) ~ #whimc:air unless block ^ ^ ^1 #whimc:air run clone ^ ^ ^1 ^ ^ ^1 ~ ~$(stack_height) ~ masked move
        scoreboard players operation @s whimc.barrelbot.stack_height += $stack_success whimc.dummy

    execute if score $stack_success whimc.dummy matches 0 run return 0

    # Write position of block to stack
    execute positioned ^ ^ ^1 summon marker run function whimc:barrelbot/clone/get_pos
    data modify storage whimc:storage stack_entry set value {}
    execute store result storage whimc:storage stack_entry.x int 1 run data get storage whimc:storage Pos[0]
    execute store result storage whimc:storage stack_entry.y int 1 run data get storage whimc:storage Pos[1]
    execute store result storage whimc:storage stack_entry.z int 1 run data get storage whimc:storage Pos[2]

    # If block is being picked up a second time, grab original location from marker
    scoreboard players set $dropped_block whimc.dummy 0
    execute positioned ^ ^ ^1 align xyz store success score $dropped_block whimc.dummy if entity @e[type=marker,tag=whimc.barrelbot.dropped_block,dx=0,dy=0,dz=0]

    execute if score $dropped_block whimc.dummy matches 1:
        data modify storage whimc:storage stack_entry set from entity @e[type=marker,tag=whimc.barrelbot.dropped_block,dx=0,dy=0,dz=0,limit=1,sort=nearest] data.location 
        kill @e[type=marker,tag=whimc.barrelbot.dropped_block,dx=0,dy=0,dz=0]
    
    data modify storage whimc:storage marker_data.block_stack append from storage whimc:storage stack_entry